"use strict";(self.webpackChunkvuepress_theme_knzn=self.webpackChunkvuepress_theme_knzn||[]).push([[6557],{8551:(n,s,a)=>{a.r(s),a.d(s,{data:()=>t});const t=JSON.parse('{"key":"v-2756a4b2","path":"/f96eb269374f48ee593ab4d5168a399e/","title":"MongoDB 读取文档","lang":"zh-CN","frontmatter":{"permalink":"/f96eb269374f48ee593ab4d5168a399e/","title":"MongoDB 读取文档","date":"2019-09-11T20:53:07.000Z","categories":["backEnd"],"tags":["mongoDB"]},"excerpt":"","headers":[{"level":2,"title":"一、db.collection.find() 读取文档","slug":"一、db-collection-find-读取文档","children":[]},{"level":2,"title":"二、匹配查询","slug":"二、匹配查询","children":[]},{"level":2,"title":"三、比较查询操作符","slug":"三、比较查询操作符","children":[]},{"level":2,"title":"四、逻辑查询操作符","slug":"四、逻辑查询操作符","children":[]},{"level":2,"title":"五、 字段查询操作符","slug":"五、-字段查询操作符","children":[]},{"level":2,"title":"六、数组查询操作符","slug":"六、数组查询操作符","children":[]},{"level":2,"title":"七、运算查询操作符","slug":"七、运算查询操作符","children":[]},{"level":2,"title":"八、游标操作","slug":"八、游标操作","children":[]},{"level":2,"title":"九、文档的投射","slug":"九、文档的投射","children":[]},{"level":2,"title":"十、 投影操作符","slug":"十、-投影操作符","children":[]},{"level":2,"title":"十一、 总结","slug":"十一、-总结","children":[]}],"git":{"updatedTime":1659094015000,"contributors":[{"name":"张焕标","email":"1140457303@qq.com","commits":1}]},"filePathRelative":"杂谈/mongoDB笔记/03-read-document.md"}')},7655:(n,s,a)=>{a.r(s),a.d(s,{default:()=>o});var t=a(6252);const p=[(0,t.uE)('<h2 id="一、db-collection-find-读取文档" tabindex="-1"><a class="header-anchor" href="#一、db-collection-find-读取文档" aria-hidden="true">#</a> 一、<code>db.collection.find()</code> 读取文档</h2><blockquote><p>Selects documents in a collection or view and returns a cursor to the selected documents.</p></blockquote><p>选择集合或视图中的文档，并返回所选文档的游标。</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>db.collection.find<span class="token punctuation">(</span>query, projection<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><table><thead><tr><th style="text-align:center;">参数</th><th style="text-align:center;">类型</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:center;">query</td><td style="text-align:center;">document</td><td style="text-align:left;">(可选的)使用查询操作符指定选择筛选器。若要返回集合中的所有文档，请省略此参数或传递一个空文档({})。</td></tr><tr><td style="text-align:center;">projection</td><td style="text-align:center;">document</td><td style="text-align:left;">(可选的) 指定要在文档中返回与查询筛选器匹配的字段。要返回匹配文档中的所有字段，请省略此参数。</td></tr></tbody></table><p>读取所有文档</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>department<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="二、匹配查询" tabindex="-1"><a class="header-anchor" href="#二、匹配查询" aria-hidden="true">#</a> 二、匹配查询</h2><ul><li><p>查询 <code>name</code> 为 <code>lisi</code> 的文档</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>department<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;lisi&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>查询 <code>name</code> 为 <code>lisi</code>, 且 <code>age</code> 为 <code>19</code> 的文档</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>department<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;lisi&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">19</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>查询 <code>_id.status</code> 为 <code>leaving</code> 的文档（复合查询）</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>department<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token string-property property">&quot;_id.status&quot;</span><span class="token operator">:</span> <span class="token string">&quot;leaving&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul><h2 id="三、比较查询操作符" tabindex="-1"><a class="header-anchor" href="#三、比较查询操作符" aria-hidden="true">#</a> 三、比较查询操作符</h2><p>语法：</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token punctuation">{</span> <span class="token operator">&lt;</span>field<span class="token operator">&gt;</span>: <span class="token punctuation">{</span> $<span class="token operator">&lt;</span>operator<span class="token operator">&gt;</span>: <span class="token operator">&lt;</span>value<span class="token operator">&gt;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><p><code>$eq</code> 相等</p><p>查询 <code>name</code> 为 <code>lisi</code>, 且 <code>age</code> 为 <code>19</code> 的文档</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>department<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">$eq</span><span class="token operator">:</span> <span class="token string">&quot;lisi&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">$eq</span><span class="token operator">:</span> <span class="token number">19</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// or db.department.find({ name: &quot;lisi&quot;, age: 19 });</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><code>$ne</code> 不相等 查询 <code>name</code> 不等于 <code>lisi</code> 的文档</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>department<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">$ne</span><span class="token operator">:</span> <span class="token string">&quot;lisi&quot;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>查询 <code>_id.status</code> 不等于 <code>leaving</code> 的文档</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>department<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token string-property property">&quot;_id.status&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">$ne</span><span class="token operator">:</span> <span class="token string">&quot;leaving&quot;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p><code>$gt</code> 大于 查询 <code>age</code> 大于 <code>18</code> 的文档</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>department<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">$gt</span><span class="token operator">:</span> <span class="token number">18</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p><code>$gte</code> 大于等于</p></li><li><p><code>$lt</code> 小于 查询 <code>name</code> 按字母大小比较， 小于 <code>lisi</code> 的文档</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>department<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">$lt</span><span class="token operator">:</span> <span class="token string">&quot;lisi&quot;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p><code>$lte</code> 小于等于</p></li><li><p><code>$in</code> 选择字段值等于指定数组中任何值的文档。 语法：</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token punctuation">{</span> field: <span class="token punctuation">{</span> <span class="token variable">$in</span><span class="token builtin class-name">:</span> <span class="token punctuation">[</span><span class="token operator">&lt;</span>value<span class="token operator"><span class="token file-descriptor important">1</span>&gt;</span>, <span class="token operator">&lt;</span>value<span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span>, <span class="token punctuation">..</span>. <span class="token operator">&lt;</span>valueN<span class="token operator">&gt;</span> <span class="token punctuation">]</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>查询 <code>name</code> 为 <code>lisi</code> 或 <code>zhangsan</code> 的文档</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>department<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token punctuation">{</span> $<span class="token keyword">in</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;lisi&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;zhangsan&quot;</span><span class="token punctuation">]</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p><code>$nin</code> 选择字段值不等于指定数组中任何值的文档。</p></li></ul><h2 id="四、逻辑查询操作符" tabindex="-1"><a class="header-anchor" href="#四、逻辑查询操作符" aria-hidden="true">#</a> 四、逻辑查询操作符</h2><ul><li><p><code>$not</code> 取反 语法：</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token punctuation">{</span> field: <span class="token punctuation">{</span> <span class="token variable">$not</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span> <span class="token operator">&lt;</span>operator-expression<span class="token operator">&gt;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>查询 <code>age</code> 不大于 <code>18</code> 的文档</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>department<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">$not</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">$gt</span><span class="token operator">:</span> <span class="token number">18</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p><code>$and</code> 且 语法:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token punctuation">{</span> <span class="token variable">$and</span><span class="token builtin class-name">:</span> <span class="token punctuation">[</span> <span class="token punctuation">{</span> <span class="token operator">&lt;</span>expression<span class="token operator"><span class="token file-descriptor important">1</span>&gt;</span> <span class="token punctuation">}</span>, <span class="token punctuation">{</span> <span class="token operator">&lt;</span>expression<span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span> <span class="token punctuation">}</span> , <span class="token punctuation">..</span>. , <span class="token punctuation">{</span> <span class="token operator">&lt;</span>expressionN<span class="token operator">&gt;</span> <span class="token punctuation">}</span> <span class="token punctuation">]</span><span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>查询 <code>age</code> 大于 <code>18</code> 小于 <code>30</code> 的文档</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// db.department.find({ age: { $gt: 18, $lt: 30 } });</span>\n<span class="token comment">// db.department.find({ $and: [{ age: { $gt: 18, $lt: 30 } }] });</span>\ndb<span class="token punctuation">.</span>department<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">$and</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">$gt</span><span class="token operator">:</span> <span class="token number">18</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">$lt</span><span class="token operator">:</span> <span class="token number">30</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查询 <code>age</code> 小于 <code>30</code> 且 <code>name</code> 小于 <code>lisi</code> 的文档</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// db.department.find({ name: { $lt: &#39;lisi&#39; }, age: { $lt: 30 } })</span>\ndb<span class="token punctuation">.</span>department<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">$and</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">$lt</span><span class="token operator">:</span> <span class="token string">&quot;lisi&quot;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">$lt</span><span class="token operator">:</span> <span class="token number">30</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><code>$or</code> 或 语法：</p></li></ul><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token punctuation">{</span> <span class="token variable">$or</span><span class="token builtin class-name">:</span> <span class="token punctuation">[</span> <span class="token punctuation">{</span> <span class="token operator">&lt;</span>expression<span class="token operator"><span class="token file-descriptor important">1</span>&gt;</span> <span class="token punctuation">}</span>, <span class="token punctuation">{</span> <span class="token operator">&lt;</span>expression<span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span> <span class="token punctuation">}</span>, <span class="token punctuation">..</span>. , <span class="token punctuation">{</span> <span class="token operator">&lt;</span>expressionN<span class="token operator">&gt;</span> <span class="token punctuation">}</span> <span class="token punctuation">]</span> <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>查询 <code>name</code> 为 <code>lisi</code> 或 <code>zhangsan</code> 的文</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// db.department.find({ name: { $in: [&quot;lisi&quot;, &quot;zhangsan&quot;] } });</span>\ndb<span class="token punctuation">.</span>department<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">$or</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;lisi&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;zhangsan&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>$nor</code> 不是</li></ul><p>查询 <code>name</code> 不为 <code>lisi</code> 或 <code>zhangsan</code> 的文</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// db.department.find({ name: { $nin: [&quot;lisi&quot;, &quot;zhangsan&quot;] } });</span>\ndb<span class="token punctuation">.</span>department<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">$nor</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;lisi&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;zhangsan&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="五、-字段查询操作符" tabindex="-1"><a class="header-anchor" href="#五、-字段查询操作符" aria-hidden="true">#</a> 五、 字段查询操作符</h2><ul><li><p><code>$exists</code> 匹配具有指定字段的文档 语法：</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token punctuation">{</span> field: <span class="token punctuation">{</span> <span class="token variable">$exists</span><span class="token builtin class-name">:</span> <span class="token operator">&lt;</span>boolean<span class="token operator">&gt;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>查询具有 <code>_id.status</code> 属性的文档</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>department<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token string-property property">&quot;_id.status&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">$exists</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>查询具有 <code>_id.status</code> 属性的文档, 且值不为 <code>working</code> 的文档</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>department<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token string-property property">&quot;_id.status&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">$exists</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token literal-property property">$ne</span><span class="token operator">:</span> <span class="token string">&quot;working&quot;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p><code>$type</code> 匹配字段类型为指定类型的文档 语法：</p><p>具体类型</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token punctuation">{</span> field: <span class="token punctuation">{</span> <span class="token variable">$type</span><span class="token builtin class-name">:</span> <span class="token operator">&lt;</span>BSON type<span class="token operator">&gt;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>多个类型</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token punctuation">{</span> field: <span class="token punctuation">{</span> <span class="token variable">$type</span><span class="token builtin class-name">:</span> <span class="token punctuation">[</span> <span class="token operator">&lt;</span>BSON type<span class="token operator"><span class="token file-descriptor important">1</span>&gt;</span> , <span class="token operator">&lt;</span>BSON type<span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span>, <span class="token punctuation">..</span>. <span class="token punctuation">]</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>支持的类型：</p><table><thead><tr><th>Type</th><th>Number</th><th>Alias</th><th>Notes</th></tr></thead><tbody><tr><td>Double</td><td>1</td><td>“double”</td><td></td></tr><tr><td>String</td><td>2</td><td>“string”</td><td></td></tr><tr><td>Object</td><td>3</td><td>“object”</td><td></td></tr><tr><td>Array</td><td>4</td><td>“array”</td><td></td></tr><tr><td>Binary data</td><td>5</td><td>“binData”</td><td></td></tr><tr><td>Undefined</td><td>6</td><td>“undefined”</td><td>Deprecated.</td></tr><tr><td>ObjectId</td><td>7</td><td>“objectId”</td><td></td></tr><tr><td>Boolean</td><td>8</td><td>“bool”</td><td></td></tr><tr><td>Date</td><td>9</td><td>“date”</td><td></td></tr><tr><td>Null</td><td>10</td><td>“null”</td><td></td></tr><tr><td>Regular Expression</td><td>11</td><td>“regex”</td><td></td></tr><tr><td>DBPointer</td><td>12</td><td>“dbPointer”</td><td>Deprecated.</td></tr><tr><td>JavaScript</td><td>13</td><td>“javascript”</td><td></td></tr><tr><td>Symbol</td><td>14</td><td>“symbol”</td><td>Deprecated.</td></tr><tr><td>JavaScript (with scope)</td><td>15</td><td>“javascriptWithScope”</td><td>Deprecated in MongoDB 4.4.</td></tr><tr><td>32-bit integer</td><td>16</td><td>“int”</td><td></td></tr><tr><td>Timestamp</td><td>17</td><td>“timestamp”</td><td></td></tr><tr><td>64-bit integer</td><td>18</td><td>“long”</td><td></td></tr><tr><td>Decimal128</td><td>19</td><td>“decimal”</td><td>New in version 3.4.</td></tr><tr><td>Min key</td><td>-1</td><td>“minKey”</td><td></td></tr><tr><td>Max key</td><td>127</td><td>“maxKey”</td><td></td></tr></tbody></table><p>查询 <code>_id</code> 的类型为 <code>string</code> 的文档</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>department<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">_id</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">$type</span><span class="token operator">:</span> <span class="token string">&quot;string&quot;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>查询 <code>_id</code> 类型为 <code>objectId</code> 或 <code>object</code> 的文档</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>department<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">_id</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">$type</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;objectId&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;object&quot;</span><span class="token punctuation">]</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul><h2 id="六、数组查询操作符" tabindex="-1"><a class="header-anchor" href="#六、数组查询操作符" aria-hidden="true">#</a> 六、数组查询操作符</h2><p>准备数据</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>department<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;a&quot;</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">skill</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;vue&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;python&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;mongodb&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;b&quot;</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">skill</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;vue&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;nodejs&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;mongodb&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;ngix&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;c&quot;</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">skill</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;react&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;nodejs&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;mongodb&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;docker&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;d&quot;</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">skill</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">&quot;django&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;flask&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;pycharm&quot;</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;e&quot;</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">skill</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">&quot;django&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;flask&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;vscode&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;vuex&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;element-ui&quot;</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p><code>$all</code> 匹配包含所有指定值的数组。 语法：</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token punctuation">{</span> <span class="token operator">&lt;</span>field<span class="token operator">&gt;</span>: <span class="token punctuation">{</span> <span class="token variable">$all</span><span class="token builtin class-name">:</span> <span class="token punctuation">[</span> <span class="token operator">&lt;</span>value<span class="token operator"><span class="token file-descriptor important">1</span>&gt;</span> , <span class="token operator">&lt;</span>value<span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span> <span class="token punctuation">..</span>. <span class="token punctuation">]</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>查询 <code>skill</code> 有 <code>python</code>、<code>vue</code>、<code>mongodb</code> 的文档</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>department<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">skill</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">$all</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;python&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;mongodb&quot;</span><span class="token punctuation">]</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// db.department.find({ $and: [{ skill: &#39;python&#39; }, { skill: &#39;vue&#39; }, { skill: &#39;mongodb&#39; }] })</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>查询 <code>skill</code> 有 <code>[&quot;django&quot;, &quot;flask&quot;, &quot;pycharm&quot;]</code> 的文档</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>department<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">skill</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">&#39;django&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;flask&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;pycharm&#39;</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p><code>$elemMatch</code> 匹配包含指定值的数组 语法：</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token punctuation">{</span> <span class="token operator">&lt;</span>field<span class="token operator">&gt;</span>: <span class="token punctuation">{</span> <span class="token variable">$elemMatch</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span> <span class="token operator">&lt;</span>query<span class="token operator"><span class="token file-descriptor important">1</span>&gt;</span>, <span class="token operator">&lt;</span>query<span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span>, <span class="token punctuation">..</span>. <span class="token punctuation">}</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>查询 <code>skill</code> 中大于 <code>docker</code> 小于 <code>vue</code> 的文档</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>department<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">skill</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">$elemMatch</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">$gt</span><span class="token operator">:</span> <span class="token string">&quot;docker&quot;</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">$lt</span><span class="token operator">:</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查询 <code>skill</code> 中(大于 <code>docker</code> 且 小于 <code>vue</code>) 而且 (大于 <code>docker</code> 且 小于 <code>webpack</code>)的文档</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>department<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">skill</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">$all</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        <span class="token literal-property property">$elemMatch</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n          <span class="token literal-property property">$gt</span><span class="token operator">:</span> <span class="token string">&quot;docker&quot;</span><span class="token punctuation">,</span>\n          <span class="token literal-property property">$lt</span><span class="token operator">:</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        <span class="token literal-property property">$elemMatch</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n          <span class="token literal-property property">$gt</span><span class="token operator">:</span> <span class="token string">&quot;docker&quot;</span><span class="token punctuation">,</span>\n          <span class="token literal-property property">$lt</span><span class="token operator">:</span> <span class="token string">&quot;webpack&quot;</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><code>$size</code> 匹配指定大小的数组。 查询 <code>skill</code> 数组长度为 <code>3</code> 的文档</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>department<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">skill</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">$size</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="七、运算查询操作符" tabindex="-1"><a class="header-anchor" href="#七、运算查询操作符" aria-hidden="true">#</a> 七、运算查询操作符</h2><ul><li><p><code>$regex</code> 选择值与指定正则表达式匹配的文档</p><p>语法：</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token punctuation">{</span> <span class="token operator">&lt;</span>field<span class="token operator">&gt;</span>: <span class="token punctuation">{</span> <span class="token variable">$regex</span><span class="token builtin class-name">:</span> /pattern/, <span class="token variable">$options</span><span class="token builtin class-name">:</span> <span class="token string">&#39;&lt;options&gt;&#39;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span>\n<span class="token punctuation">{</span> <span class="token operator">&lt;</span>field<span class="token operator">&gt;</span>: <span class="token punctuation">{</span> <span class="token variable">$regex</span><span class="token builtin class-name">:</span> <span class="token string">&#39;pattern&#39;</span>, <span class="token variable">$options</span><span class="token builtin class-name">:</span> <span class="token string">&#39;&lt;options&gt;&#39;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span>\n<span class="token punctuation">{</span> <span class="token operator">&lt;</span>field<span class="token operator">&gt;</span>: <span class="token punctuation">{</span> <span class="token variable">$regex</span><span class="token builtin class-name">:</span> /pattern/<span class="token operator">&lt;</span>options<span class="token operator">&gt;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>你也可以使用正则表达式对象(如<code>/pattern/</code>)来指定正则表达式</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token punctuation">{</span> <span class="token operator">&lt;</span>field<span class="token operator">&gt;</span>: /pattern/<span class="token operator">&lt;</span>options<span class="token operator">&gt;</span> <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>$options</code>: 匹配模式</p><ul><li><code>i</code> 忽略大小写</li><li><code>m</code> 多行匹配</li><li><code>x</code> 将模式中的空白忽略</li><li><code>s</code> 将字符串视为单行,换行符作为普通字符;</li></ul><p>查询 <code>name</code> 以 <code>li</code> 或 <code>李</code> 开头, 忽略大小写的文档</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>department<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">$regex</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(^li)|(^李)</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token literal-property property">$options</span><span class="token operator">:</span> <span class="token string">&quot;i&quot;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\ndb<span class="token punctuation">.</span>department<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">$regex</span><span class="token operator">:</span> <span class="token string">&quot;(^li)|(^李)&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">$options</span><span class="token operator">:</span> <span class="token string">&quot;i&quot;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\ndb<span class="token punctuation">.</span>department<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">$regex</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(^li)|(^李)</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\ndb<span class="token punctuation">.</span>department<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(^li)|(^李)</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\ndb<span class="token punctuation">.</span>department<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token punctuation">{</span> $<span class="token keyword">in</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^li</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^李</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">]</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="八、游标操作" tabindex="-1"><a class="header-anchor" href="#八、游标操作" aria-hidden="true">#</a> 八、游标操作</h2><p><code>db.collection.find()</code>方法返回一个游标, 要访问文档，需要迭代游标。但是，如果返回的游标没有使用<code>var</code>关键字分配给变量，那么游标最多只显示结果中前 20 条文档</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> myCursor <span class="token operator">=</span> db<span class="token punctuation">.</span>department<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nmyCursor<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>访问查询结果的第一条文档</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> myCursor <span class="token operator">=</span> db<span class="token punctuation">.</span>department<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nmyCursor<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>遍历游标</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> myCursor <span class="token operator">=</span> db<span class="token punctuation">.</span>department<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">while</span> <span class="token punctuation">(</span>myCursor<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token function">printjson</span><span class="token punctuation">(</span>myCursor<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// myCursor.forEach(printjson);</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>默认情况下，在 10 分钟内不活动或者已经遍历完的游标将自动关闭，覆盖此行为，可以使用<code> cursor.noCursorTimeout()</code>方法:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> myCursor <span class="token operator">=</span> db<span class="token punctuation">.</span>department<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">noCursorTimeout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>手动关闭游标</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>myCursor<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>指定返回文档的数量</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> myCursor <span class="token operator">=</span> db<span class="token punctuation">.</span>department<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nmyCursor<span class="token punctuation">.</span><span class="token function">limit</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>跳过指定数量的文档</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> myCursor <span class="token operator">=</span> db<span class="token punctuation">.</span>department<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nmyCursor<span class="token punctuation">.</span><span class="token function">skip</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>翻页时，假设每页显示 2 条文档，则第二页的数据应该为：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> myCursor <span class="token operator">=</span> db<span class="token punctuation">.</span>department<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nmyCursor<span class="token punctuation">.</span><span class="token function">skip</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">limit</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>当 <code>limit</code>方法参数为 <code>0</code> 时，将返回剩下的所有文档</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> myCursor <span class="token operator">=</span> db<span class="token punctuation">.</span>department<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nmyCursor<span class="token punctuation">.</span><span class="token function">skip</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">limit</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>获取游标中文档的总个数</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> myCursor <span class="token operator">=</span> db<span class="token punctuation">.</span>department<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// 不考虑是否调用了 `limit` 或 `skip` 方法, 将返回总个数</span>\nmyCursor<span class="token punctuation">.</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// 如果想知道调用了 `limit` 或 `skip` 方法后返回的个数</span>\nmyCursor<span class="token punctuation">.</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如：</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token operator">&gt;</span> var myCursor <span class="token operator">=</span> db.department.find<span class="token punctuation">(</span><span class="token punctuation">)</span>.noCursorTimeout<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token operator">&gt;</span> myCursor.limit<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>\n<span class="token punctuation">{</span> <span class="token string">&quot;_id&quot;</span> <span class="token builtin class-name">:</span> <span class="token string">&quot;employee1&quot;</span>, <span class="token string">&quot;name&quot;</span> <span class="token builtin class-name">:</span> <span class="token string">&quot;zhangsan&quot;</span>, <span class="token string">&quot;age&quot;</span> <span class="token builtin class-name">:</span> <span class="token number">18</span> <span class="token punctuation">}</span>\n<span class="token punctuation">{</span> <span class="token string">&quot;_id&quot;</span> <span class="token builtin class-name">:</span> ObjectId<span class="token punctuation">(</span><span class="token string">&quot;5f4fe031b3dbdc66cacb3b8d&quot;</span><span class="token punctuation">)</span>, <span class="token string">&quot;name&quot;</span> <span class="token builtin class-name">:</span> <span class="token string">&quot;lisi&quot;</span>, <span class="token string">&quot;age&quot;</span> <span class="token builtin class-name">:</span> <span class="token number">19</span> <span class="token punctuation">}</span>\n<span class="token operator">&gt;</span> myCursor.count<span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token number">19</span>\n<span class="token operator">&gt;</span> myCursor.count<span class="token punctuation">(</span>true<span class="token punctuation">)</span>\n<span class="token number">2</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>cursor.sort(&lt;document&gt;)</code>对文档进行排序 在 sort 参数中指定要排序的字段，值为 1 或-1 分别指定升序或降序排序。</p><p>假如对游标中的文档按 <code>age</code> 升序， <code>name</code> 降序</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> myCursor <span class="token operator">=</span> db<span class="token punctuation">.</span>department<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nmyCursor<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>查询 <code>age</code> 最大的文档</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>department<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">limit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>链式查询时，需要注意函数的优先级</strong></p><p><code>skip</code> 的优先级大于 <code>limit</code> 所以下面的命令，返回相同的结果</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>department<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">skip</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">limit</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>department<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">limit</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">skip</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>sort</code> 的优先级 大于 <code>skip</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>department<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">skip</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">limit</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// db.department.find({}).sort({ age: -1 }).skip(5).limit(5);</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="九、文档的投射" tabindex="-1"><a class="header-anchor" href="#九、文档的投射" aria-hidden="true">#</a> 九、文档的投射</h2><p>投影参数决定在匹配的文档中返回哪些字段<br> 投影参数采用以下形式的文档</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token punctuation">{</span> <span class="token operator">&lt;</span>field<span class="token operator"><span class="token file-descriptor important">1</span>&gt;</span>: <span class="token operator">&lt;</span>value<span class="token operator">&gt;</span>, <span class="token operator">&lt;</span>field<span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span>: <span class="token operator">&lt;</span>value<span class="token operator">&gt;</span> <span class="token punctuation">..</span>. <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><code>&lt;field&gt;: &lt;1 or true&gt;</code> 指定包含的字段</li><li><code>&lt;field&gt;: &lt;0 or false&gt;</code> 指定排除的字段</li></ul><p>返回的文档中，只包含字段 <code>name</code> 和 <code>_id</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>department<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>返回的文档中，只包含字段 <code>name</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>department<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">_id</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>返回的文档中，不包含字段 <code>name</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>department<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>除了文档主键 <code>_id</code> 外，不能再投射中使用，即包含与不包含的操作</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">try</span> <span class="token punctuation">{</span>\n  db<span class="token punctuation">.</span>department<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token function">print</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行结果：</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>Error: error: <span class="token punctuation">{</span>\n\t<span class="token string">&quot;ok&quot;</span> <span class="token builtin class-name">:</span> <span class="token number">0</span>,\n\t<span class="token string">&quot;errmsg&quot;</span> <span class="token builtin class-name">:</span> <span class="token string">&quot;Cannot do inclusion on field age in exclusion projection&quot;</span>,\n\t<span class="token string">&quot;code&quot;</span> <span class="token builtin class-name">:</span> <span class="token number">31253</span>,\n\t<span class="token string">&quot;codeName&quot;</span> <span class="token builtin class-name">:</span> <span class="token string">&quot;Location31253&quot;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="十、-投影操作符" tabindex="-1"><a class="header-anchor" href="#十、-投影操作符" aria-hidden="true">#</a> 十、 投影操作符</h2><ul><li><p><code>$slice (projection)</code> 指定在查询结果中返回的数组中的元素数量</p><p>语法：</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>db.collection.find<span class="token punctuation">(</span>\n <span class="token operator">&lt;</span>query<span class="token operator">&gt;</span>,\n <span class="token punctuation">{</span> <span class="token operator">&lt;</span>arrayField<span class="token operator">&gt;</span>: <span class="token punctuation">{</span> <span class="token variable">$slice</span><span class="token builtin class-name">:</span> <span class="token operator">&lt;</span>number to return<span class="token operator">&gt;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>或</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>db.collection.find<span class="token punctuation">(</span>\n <span class="token operator">&lt;</span>query<span class="token operator">&gt;</span>,\n <span class="token punctuation">{</span> <span class="token operator">&lt;</span>arrayField<span class="token operator">&gt;</span>: <span class="token punctuation">{</span> <span class="token variable">$slice</span><span class="token builtin class-name">:</span> <span class="token punctuation">[</span> <span class="token operator">&lt;</span>number to skip<span class="token operator">&gt;</span>, <span class="token operator">&lt;</span>number to reutrn<span class="token operator">&gt;</span> <span class="token punctuation">]</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>返回 <code>skill</code> 数组中的前 2 个元素</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>department<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">skill</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">$slice</span><span class="token operator">:</span> <span class="token number">2</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>返回 <code>skill</code> 数组中忽略第一个元素后的 2 个元素</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>department<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">skill</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">$slice</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>返回 <code>skill</code> 数组中的最后 2 个元素</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>department<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">skill</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">$slice</span><span class="token operator">:</span> <span class="token operator">-</span><span class="token number">2</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p><code>$elemMatch (projection)</code> 返回数组中满足条件的第一个元素</p><p>返回 <code>skill</code> 数组中的大于 <code>python</code> 的第一个元素<br><strong>如果没有找到匹配的元素，<code>skill</code> 字段将被忽略</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>department<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">skill</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">$elemMatch</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">$gt</span><span class="token operator">:</span> <span class="token string">&quot;python&quot;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>该操作符，会忽略掉除了 <code>_id</code> 的其他字段, 其他字段需要显示指定</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>department<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span>\n  <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">skill</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">$elemMatch</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">$gt</span><span class="token operator">:</span> <span class="token string">&quot;python&quot;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>引用查询条件中的值: 如果查询条件中有 <code>skill</code> 数组的过滤条件，可以使用投射中使用下面的方式，调用 <code>$elemMatch</code> 操作符</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>department<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">skill</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">$gt</span><span class="token operator">:</span> <span class="token string">&quot;python&quot;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token string-property property">&quot;skill.$&quot;</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// db.department.find({ skill: { $gt: &#39;python&#39; } }, { skill: { $elemMatch: { $gt: &#39;python&#39; } } })</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="十一、-总结" tabindex="-1"><a class="header-anchor" href="#十一、-总结" aria-hidden="true">#</a> 十一、 总结</h2><ul><li><code>db.collection.find()</code></li><li>比较操作符</li><li>逻辑操作符</li><li>字段操作符</li><li>数组操作符</li><li>运算操作符</li><li>游标的操作</li><li>文档投射操作</li></ul>',81)],e={},o=(0,a(3744).Z)(e,[["render",function(n,s){return(0,t.wg)(),(0,t.iD)("div",null,p)}]])}}]);